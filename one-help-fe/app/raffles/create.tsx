import React, { useEffect, useState } from "react";
import { View, Text, TouchableOpacity, ScrollView } from "react-native";
import { Dropdown } from "react-native-element-dropdown";
import { useRouter } from "expo-router";
import { useForm, Controller, useFieldArray } from "react-hook-form";
import { TextInput, Select } from "@/components/controls";

export default function CreateRaffle() {
  const router = useRouter();

  // Sample fundraisers list (replace this with data fetching logic)
  const [fundraisers, setFundraisers] = useState([
    { id: "1", name: "Fundraiser 1" },
    { id: "2", name: "Fundraiser 2" },
    { id: "3", name: "Fundraiser 3" },
  ]);

  const {
    control,
    handleSubmit,
    formState: { errors },
  } = useForm({
    defaultValues: {
      title: "",
      description: "",
      minimum_donation: "",
      fundraiser_id: "",
      gifts: [{ title: "", description: "", image: "" }],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control,
    name: "gifts",
  });

  const onSubmit = (data: any) => {
    console.log("–ù–æ–≤–∏–π —Ä–æ–∑—ñ–≥—Ä–∞—à:", data);
    router.back();
  };

  return (
    <ScrollView className="flex-1 bg-white p-6">
      <Text className="text-2xl font-bold text-gray-msg mb-4">
        –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à
      </Text>
      <View className="flex flex-col gap-4">
        <Controller
          control={control}
          name="title"
          rules={{ required: "–ù–∞–∑–≤–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—É —î –æ–±–æ–≤'—è–∑–∫–æ–≤–æ—é" }}
          render={({ field: { onChange, value } }) => (
            <TextInput
              label="–ù–∞–∑–≤–∞ —Ä–æ–∑—ñ–≥—Ä–∞—à—É"
              required="*"
              placeholder="–†–æ–∑—ñ–≥—Ä–∞—à –ø–æ–¥–∞—Ä—É–Ω–∫—ñ–≤"
              onChangeText={onChange}
              value={value}
              error={!!errors.title}
              errorMessage={errors.title?.message?.toString()}
            />
          )}
        />

        <Controller
          control={control}
          name="description"
          rules={{ required: "–û–ø–∏—Å —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º" }}
          render={({ field: { onChange, value } }) => (
            <TextInput
              label="–û–ø–∏—Å"
              required="*"
              placeholder="–û–ø–∏—à—ñ—Ç—å –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—ñ–≥—Ä–∞—à—É"
              multiline
              onChangeText={onChange}
              value={value}
              error={!!errors.description}
              errorMessage={errors.description?.message?.toString()}
            />
          )}
        />

        <Controller
          control={control}
          name="minimum_donation"
          rules={{ required: "–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–æ–Ω–∞—Ç —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º" }}
          render={({ field: { onChange, value } }) => (
            <TextInput
              label="–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–æ–Ω–∞—Ç (‚Ç¥)"
              required="*"
              placeholder="50"
              keyboardType="numeric"
              onChangeText={onChange}
              value={value}
              error={!!errors.minimum_donation}
              errorMessage={errors.minimum_donation?.message?.toString()}
            />
          )}
        />
        <Controller
          control={control}
          name="fundraiser_id"
          rules={{ required: "–û–±–µ—Ä—ñ—Ç—å –∑–±—ñ—Ä –∫–æ—à—Ç—ñ–≤" }}
          render={({ field: { onChange, value } }) => (
            <Select
              data={fundraisers}
              labelField="name"
              valueField="id"
              label="–ó–±—ñ—Ä"
              placeholder="–û–±–µ—Ä—ñ—Ç—å –∑–±—ñ—Ä"
              searchPlaceholder="Search..."
              value={value}
              onChange={onChange}
              error={!!errors.fundraiser_id}
              errorMessage={errors?.fundraiser_id?.message}
            />
          )}
        />

        <Text className="text-lg font-semibold mb-2">üéÅ –ü–æ–¥–∞—Ä—É–Ω–∫–∏:</Text>
        {fields.map((gift, index) => (
          <View
            key={gift.id}
            className="border border-gray-300 p-3 rounded-md mb-3"
          >
            <Controller
              control={control}
              name={`gifts.${index}.title`}
              rules={{ required: "–ù–∞–∑–≤–∞ –ø–æ–¥–∞—Ä—É–Ω–∫–∞ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–æ—é" }}
              render={({ field: { onChange, value } }) => (
                <TextInput
                  label="–ù–∞–∑–≤–∞ –ø–æ–¥–∞—Ä—É–Ω–∫–∞"
                  required="*"
                  placeholder="Apple Watch"
                  onChangeText={onChange}
                  value={value}
                  error={!!errors.gifts?.[index]?.title}
                  errorMessage={errors.gifts?.[
                    index
                  ]?.title?.message?.toString()}
                />
              )}
            />

            <Controller
              control={control}
              name={`gifts.${index}.description`}
              rules={{ required: "–û–ø–∏—Å –ø–æ–¥–∞—Ä—É–Ω–∫–∞ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º" }}
              render={({ field: { onChange, value } }) => (
                <TextInput
                  label="–û–ø–∏—Å –ø–æ–¥–∞—Ä—É–Ω–∫–∞"
                  required="*"
                  placeholder="–û–ø–∏—Å –ø–æ–¥–∞—Ä—É–Ω–∫–∞..."
                  multiline
                  onChangeText={onChange}
                  value={value}
                  error={!!errors.gifts?.[index]?.description}
                  errorMessage={errors.gifts?.[
                    index
                  ]?.description?.message?.toString()}
                />
              )}
            />

            <Controller
              control={control}
              name={`gifts.${index}.image`}
              render={({ field: { onChange, value } }) => (
                <TextInput
                  label="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"
                  placeholder="https://example.com/gift.jpg"
                  onChangeText={onChange}
                  value={value}
                  error={!!errors.gifts?.[index]?.image}
                  errorMessage={errors.gifts?.[
                    index
                  ]?.image?.message?.toString()}
                />
              )}
            />

            {fields.length > 1 && (
              <TouchableOpacity
                onPress={() => remove(index)}
                className="bg-red-500 rounded-md mt-2 p-2"
              >
                <Text className="text-white text-center">
                  –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥–∞—Ä—É–Ω–æ–∫
                </Text>
              </TouchableOpacity>
            )}
          </View>
        ))}

        <TouchableOpacity
          onPress={() => append({ title: "", description: "", image: "" })}
          className="bg-gray-300 rounded-md p-3 mb-3"
        >
          <Text className="text-black text-center">+ –î–æ–¥–∞—Ç–∏ —â–µ –ø–æ–¥–∞—Ä—É–Ω–æ–∫</Text>
        </TouchableOpacity>

        <TouchableOpacity
          onPress={handleSubmit(onSubmit)}
          className="bg-primary rounded-lg p-4 items-center"
        >
          <Text className="text-white text-lg font-semibold">
            –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–æ–∑—ñ–≥—Ä–∞—à ‚úÖ
          </Text>
        </TouchableOpacity>
      </View>
    </ScrollView>
  );
}
